% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/redcap_import_recode.R
\name{redcap_import_recode}
\alias{redcap_import_recode}
\title{REDCap Recode}
\usage{
redcap_import_recode(selected_data, dict = NULL, rc_token, rc_url)
}
\arguments{
\item{selected_data}{Data to be recoded}

\item{dict}{Data dictionary (e.g. as downloaded from REDCap or via
\code{redcap_export_meta(rc_token, rc_url)$meta}). If not supplied, this will
be downloaded from the API using \code{rc_token}.}

\item{rc_token}{REDCap API token}

\item{rc_url}{Link to REDCap API. Default: https://redcap.ctu.unibe.ch/api/}
}
\value{
Data frame with recoded data. Log-file with executed code.
}
\description{
This function loops through all the variable classes of a data set and lets
the user compare them with the variable types set up in REDCap. An API token
is needed to download the variable names from REDCap. The class/type can be
changed to output a new summary and to match REDCap. If 'factor' is chosen as
class, the script loops through all the factor levels and compares them with
the coding as defined in REDCap. The factor levels can then be matched with
the respective codes in REDCap. The function returns a data frame with the
recoded variables and writes the executed code to a log-file for copy-pasting
and adjusting/reusing.
}
\examples{
# data(importdemo_data)
# data(importdemo_dict)
# redcap_import_recode(importdemo_data, importdemo_dict)

# if using local data:
# token <- "xxxxx"
# url <- "xxxxx"
# file <- "data.csv"
# redcap_import_recode(file, rc_token = token, rc_url = url)
}
